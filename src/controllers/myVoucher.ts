import MyVoucherModel from "../models/myVoucher";
import TypeVoucherModel from "../models/typeVoucher";
import VoucherModel from "../models/voucher";
export const createMyVoucher = async (req, res) => {
  try {
    const data = await MyVoucherModel.create(req.body);
    if (!data) {
      return res.status(404).json({
        message: "táº¡o khuyáº¿n mÃ£i cá»§a user tháº¥t báº¡i",
      });
    }
    return res.status(200).json({
      message: "Táº¡o khuyáº¿n mÃ£i cá»§a user thÃ nh cÃ´ng ",
      datas: data,
    });
  } catch (error) {
    return res.status(500).json({
      message: "lá»—i khi thÃªm voucher: " + error.message,
    });
  }
};
export const getAllMyVoucher = async (req, res) => {
  try {
    const idVc = req.params.id;
    const data = await MyVoucherModel.find(
      { idVoucher: idVc },
      {
        ExistsInStock: true,
      }
    );
    if (!data) {
      return res.status(404).json({
        message: "láº¥y danh sÃ¡ch khuyáº¿n máº¡i tháº¥t báº¡i",
      });
    }

    return res.status(200).json({
      message: "Láº¥y danh sÃ¡ch khuyáº¿n máº¡i thÃ nh cÃ´ng",
      datas: data,
    });
  } catch (error) {
    return res.status(500).json({
      message: error.message,
    });
  }
};
export const getAllMyVoucherUser = async (req, res) => {
  try {
    const idUser = req.params.id;
    const data = await MyVoucherModel.find({ idUser: idUser });
    if (!data) {
      return res.status(404).json({
        message: "láº¥y danh sÃ¡ch khuyáº¿n máº¡i tháº¥t báº¡i",
      });
    }

    const myVoucher = await Promise.all(
      data.map(async (item) => {
        console.log("ðŸš€ ~ data.map ~ item:", item);
        const voucher = await VoucherModel.findById(item?._doc?.idVoucher);
        if (voucher !== null) {
          return { ...item?._doc, voucher };
        }
      })
    );
    // Filter out null vouchers
    const validVouchers = myVoucher.filter((voucher) => voucher !== undefined);

    return res.status(200).json({
      message: "Láº¥y danh sÃ¡ch khuyáº¿n máº¡i thÃ nh cÃ´ng",
      datas: validVouchers,
    });
  } catch (error) {
    return res.status(500).json({
      message: error.message,
    });
  }
};
export const getDetailMyVoucher = async (req, res) => {
  try {
    const data = await MyVoucherModel.findById(req.params.id, {
      ExistsInStock: true,
    });
    if (!data) {
      return res.status(404).json({
        message: "Láº¥y khuyáº¿n máº¡i chi tiáº¿t tháº¥t báº¡i",
      });
    }
    const typeVoucher = await TypeVoucherModel.findById(data.idTypeVoucher);

    return res.status(200).json({
      message: "Láº¥y khuyáº¿n máº¡i chi tiáº¿t thÃ nh cÃ´ng",
      datas: { ...data._doc, typeVoucher: typeVoucher._doc.name },
    });
  } catch (error) {
    return res.status(500).json({
      message: error.message,
    });
  }
};
export const removeMyVoucher = async (req, res) => {
  try {
    const data = await MyVoucherModel.findByIdAndUpdate(req.params.id, {
      ExistsInStock: false,
    });
    if (!data) {
      return res.status(404).json({
        message: "XÃ³a khuyáº¿n máº¡i tháº¥t báº¡i",
      });
    }
    return res.status(200).json({
      message: "XÃ³a khuyáº¿n máº¡i thÃ nh cÃ´ng",
      datas: data,
    });
  } catch (error) {
    return res.status(500).json({
      message: error.message,
    });
  }
};

export const updateMyVoucher = async (req, res) => {
  try {
    const data = await MyVoucherModel.findByIdAndUpdate(
      req.params.id,
      req.body,
      {
        new: true,
      }
    );
    if (!data) {
      return res.status(404).json({
        message: "Cáº­p nháº­t khuyáº¿n máº¡i tháº¥t báº¡i",
      });
    }
    return res.status(200).json({
      message: "Cáº­p nháº­t khuyáº¿n máº¡i thÃ nh cÃ´ng",
      datas: data,
    });
  } catch (error) {
    return res.status(500).json({
      message: error.message,
    });
  }
};

export const decreaseMyVoucherQuantity = async (voucherId) => {
  try {
    // TÃ¬m voucher theo ID
    const voucher = await MyVoucherModel.findById(voucherId);

    // Kiá»ƒm tra náº¿u khÃ´ng tÃ¬m tháº¥y voucher
    if (!voucher) {
      return {
        success: false,
        message: "KhÃ´ng tÃ¬m tháº¥y voucher",
      };
    }

    // Giáº£m sá»‘ lÆ°á»£ng voucher Ä‘i 1 Ä‘Æ¡n vá»‹
    voucher.quantity -= 1;

    // LÆ°u láº¡i thay Ä‘á»•i
    await voucher.save();

    return true;
  } catch (error) {
    return {
      success: false,
      message: "Lá»—i khi giáº£m sá»‘ lÆ°á»£ng voucher: " + error.message,
    };
  }
};
